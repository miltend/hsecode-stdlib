// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package matrix

type Matrix struct {
	Rows int // number of rows
	Cols int // number of columns
	// contains filtered or unexported fields
	matr [][]int
}

func New(n, m int) *Matrix {
	if n <= 0 || m <= 0 {
		panic("rows and columns must be positive")
	}
	var matrrr [][]int
	//mtrx := Matrix{
	//	n,
	//	m,
	//	matrrr,
	//}
	var mtrx Matrix
	mtrx.Rows = n
	mtrx.Cols = m
	mtrx.matr = matrrr
	for i := 0; i < n; i++ {
		row := make([]int, m)
		mtrx.matr = append(mtrx.matr, row)
	}
	//smth := &mtrx
	return &mtrx
}

func (M *Matrix) Set(i, j int, v int) {
	if i >= M.Rows || i < 0 {
		panic("row indice is out of range")
	}
	if j >= M.Cols || j < 0 {
		panic("column indice is out of range")
	}
	M.matr[i][j] = v
}

func (M *Matrix) Get(i, j int) int {
	if i >= M.Rows || i < 0 {
		panic("row indice is out of range")
	}
	if j >= M.Cols || j < 0 {
		panic("column indice is out of range")
	}
	return M.matr[i][j]
}
